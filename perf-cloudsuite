#!/bin/bash

# parameters
results=$(pwd)/results
#results=/home/ahmad/Desktop/cpu/run_cloudsuite/results
running_time=83 # 52 seconds

# perf
skip_time=60000    # 30 seconds
sampling_time=2000 # 2 seconds
events=cycles,instructions,branches,branch-misses,bus-cycles,stalled-cycles-frontend,stalled-cycles-backend,task-clock,page-faults,context-switches,cpu-migrations,L1-dcache-loads,L1-dcache-load-misses,L1-dcache-stores,L1-dcache-store-misses,L1-dcache-prefetch-misses,L1-icache-load-misses,LLC-loads,LLC-stores,LLC-prefetches,dTLB-loads,dTLB-load-misses,dTLB-stores,dTLB-store-misses,iTLB-loads,iTLB-load-misses
perf_command="perf stat -D $skip_time -I $sampling_time -e $events -x , -o"

# SPEC
spec_command="runspec -a onlyrun -c huzi.cfg --noreportable --size=ref --tune=base --iterations=1"

###data-analytics
#./run_dataanalytics
#$perf_command $results/dataanalytics-cloudsuite.csv -p $(ps axj | grep spark-1.5.1 | awk '$10!="grep" {print $2}') &
#sleep $running_time
#kill -TERM -`ps -e | grep perf | awk '{print $1}'`
#./docker_cleanup
#
###data-caching
#./run_datacaching 
#SERVER_PID=$(ps axj | grep memcache | awk '$10=="memcached" {print $2}')
#CLIENT_PID=$(ps axj | grep loader | awk '$10=="./loader" {print $2}')
#echo "SERVER_PID:" $SERVER_PID
#echo "CLIENT_PID:" $CLIENT_PID
#
#$perf_command $results/datacaching-cloudsuite.csv -p $SERVER_PID,$CLIENT_PID &
#sleep $running_time
#kill -TERM -`ps -e | grep perf | awk '{print $1}'`
#./docker_cleanup
#
###web-serving 
#./run_webserving
#SERVER_PIDS=""
#PIDS=$(ps axj | grep "nginx: worker" | awk '$10!="grep" {print $2}')
# 
#for pid in $PIDS; do
#	SERVER_PIDS+=$pid","
#done
#echo "SERVER_PIDS:" $SERVER_PIDS
#
#PHP_PIDS=""
#PIDS=$(ps axj | grep "php-fpm: pool" | awk '$10!="grep" {print $2}')
#
#for pid in $PIDS; do
#	PHP_PIDS+=$pid","
#done
#echo "PHP_PIDS:" $PHP_PIDS
# 
#MEMCACHED_PID=$(ps axj | grep "memcached" | awk '{if ($10=="memcached") print $2}')
#echo "MEMCACHED_PID:" $MEMCACHED_PID
# 
#MYSQL_PID=$(ps axj | grep "mysql" | awk '{if ($10!="grep") print $2}')
#echo "MYSQL_PID:" $MYSQL_PID
# 
#CLIENT_PIDS=$(ps axj | grep DisableExplicitGC | awk '$10!="grep" {print $2}')
#CLIENT_PIDS+=","$(ps axj | grep Xms64m | awk '$10!="grep" {print $2}')
#echo "CLIENT_PIDS:" $CLIENT_PIDS
# 
#ALL_PIDS=$SERVER_PIDS$PHP_PIDS$MEMCACHED_PID","$MYSQL_PID","$CLIENT_PIDS
#echo "ALL_PIDS:" $ALL_PIDS
# 
#$perf_command $results/webserving-cloudsuite.csv -p $ALL_PIDS &
#sleep $running_time
#kill -TERM -`ps -e | grep perf | awk '{print $1}'`
#./docker_cleanup
#
##data-serving 
./run_dataserving
MONGO_PID=$(ps axj | grep mongod | awk '$10=="./bin/mongod" {print $2}')
YCSB_PID=$(ps axj | grep ycsb | awk '$10=="java" {print $2}')
echo "MONGO_PID:" $MONGO_PID
echo "YCSB_PID:" $YCSB_PID
$perf_command $results/dataserving-cloudsuite.csv -p $MONGO_PID,$YCSB_PID &
sleep $running_time
kill -TERM -`ps -axj | grep 'perf stat' | awk '$10!="grep" {print $2}'`
./docker_cleanup

# All of these currencies use the same cpuminer
#cd /home/ahmad/cpuminer-multi-windows
#
## Litecoin (Scrypt)
#$perf_command $results/scrypt_perf_cpu.csv -- ./cpuminer -a scrypt -o stratum+tcp://us.litecoinpool.org:3333 -u rashidtahir.worker1 -p rashid &
#sleep $running_time
#pkill cpuminer
#
## Bytecoin (CryptoNight)
#$perf_command $results/byte_perf_cpu.csv -- ./cpuminer -a cryptonight -o stratum+tcp://bcn.pool.minergate.com:45550 -u rashid.tahir.khan@gmail.com -p rashiduiuc &
#sleep $running_time
#pkill cpuminer
#
## Dash (X11)
## Old server doesn't work. stratum+tcp://dash.suprnova.cc:9995
#$perf_command $results/dash_perf_cpu.csv -- ./cpuminer -a x11 -o stratum+tcp://dark80.suprnova.cc:443 -u rashidtahir.worker1 -p rashid &
#sleep $running_time
#pkill cpuminer
#
## Quarkcoin (9 rounds of 6 different hashing algorithms)
#$perf_command $results/quark_perf_cpu.csv -- ./cpuminer -a quark -o stratum+tcp://qrk.suprnova.cc:6666 -u rashidtahir.worker1 -p rashid &
#sleep $running_time
#pkill cpuminer
#
## Vertcoin (Lyra2RE)
## Old server doesn't work. stratum+tcp://pool.verters.com:4444
#$perf_command $results/vert_perf_cpu.csv -- ./cpuminer -a lyra2rev2 -o stratum+tcp://vtc.alwayshashing.com:9171 -u rashidtahir.worker1 -p rashid &
#sleep $running_time
#pkill cpuminer
#
#echo "LIKE A MINERS"
#
## SPEC
## Note: SPEC runs until the specified benchmark finishes execution (there is no
## flag to tell it to terminate early) and there is no way to stop it except by
## doing Ctrl+C while profiling with perf.  Therefore, we must do "Ctrl+C" in
## this script as follows:
## 1) Launch SPEC in background using "&".
## 2) Sleep for desired amount of time (e.g. 50 seconds).
## 3) Kill *SPEC* (*not* perf) using kill.
## 4) Barty. Hard. While drinking Bebsi.
#cd /home/ahmad/spec2006
#. ./shrc
#
## INT
## perl
#$perf_command $results/perl_perf.csv -- $spec_command perlbench &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## bzip2
#$perf_command $results/bzip2_perf.csv -- $spec_command bzip2 &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## gcc
#$perf_command $results/gcc_perf.csv -- $spec_command gcc &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## mcf
#$perf_command $results/mcf_perf.csv -- $spec_command mcf &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## gobmk
#$perf_command $results/gobmk_perf.csv -- $spec_command gobmk &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## hmmer
#$perf_command $results/hmmer_perf.csv -- $spec_command hmmer &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## sjeng
#$perf_command $results/sjeng_perf.csv -- $spec_command sjeng &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## libquantum
#$perf_command $results/libquantum_perf.csv -- $spec_command libquantum &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## h264ref
#$perf_command $results/h264ref_perf.csv -- $spec_command h264ref &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## astar
#$perf_command $results/astar_perf.csv -- $spec_command astar &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## xalancbmk
#$perf_command $results/xalancbmk_perf.csv -- $spec_command xalancbmk &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## FP
## milc
#$perf_command $results/milc_perf.csv -- $spec_command milc &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## namd
#$perf_command $results/namd_perf.csv -- $spec_command namd &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## soplex
#$perf_command $results/soplex_perf.csv -- $spec_command soplex &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## povray
#$perf_command $results/povray_perf.csv -- $spec_command povray &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## lbm
#$perf_command $results/lbm_perf.csv -- $spec_command lbm &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
## sphinx3
#$perf_command $results/sphinx3_perf.csv -- $spec_command sphinx3 &
#sleep $running_time
#kill -TERM -`ps -e | grep runspec | awk '{print $1}'`
#
#echo "LIKE A SPEC"
#
